package core

import (
	"fmt"
	"testing"
)

//   09 01 01 03|09 01 01 01 01 03|09 01 01 01 01 03
//
//   08 00 00 00 00 02|*c 00 00 00 00 00 00 02|08 02
//                     --
//   08 04 00 00 00 00 01 00 00 00 02|0c 00 00 00 02
//      --                            --
//   08 03|08 00 00 04 00 00 00 00 00 01 00 00 00 06
//                  --                            --
//   08 00 00 00 02|09 00 00 00 00 00 00 00 00 00 03
//
//   08 00 06|08 00 00 00 06|08 00 00 00 00 00 00 02
//         --             --
//   0c 00 01 00 00 00 00 05 04 00 04 00 00 06|08 02
//   --                   -- --    --       --
//   09 00 00 00 00 00 02|09 03|08 03|08 00 01 00 02
//
//   08 00 00 00 00 00 02|0c 06|08 00 00 04 00 00 02
//                        -- --          --
//   08 04 00 02|0c 00 00 01 01 00 00 00 03|08 00 06
//      --       --                               --
//   08 03|08 00 01 00 00 00 02|0c 00 00 00 00 00 03
//                              --
//   0c 00 00 00 00 00 00 00 00 01 00 00 00 00 00 02
//   --
//   09 00 00 00 00 00 04 00 00 00 40 30 10 20 00 02
//                     --
//   08 00 00 00 00 02|09 00 00 04 00 00 00 00 06|0a
//                              --             --
//   08 00 06|08 00 00 00 00 02|09 00 00 00 00 01 02
//         --
//   0c 04 05 06|0c 04 04 04 04 04 06|0c 04 04 04 06
func ExampleSolve() {
	p := NewPosition(setupExample(), 22)
	ok := p.Solve(10)
	fmt.Println(ok)
	fmt.Println(p.move[1:])
	// Output:
	// true
	// [{1 1} {1 8} {1 1} {1 2} {1 4} {4 1} {4 8} {4 1} {1 1} {1 8} ]

}

func setupExample() *Board {
	b := StandardBoard()
	*b.fieldAt(10, 12) |= EncodeColor(4)
	*b.fieldAt(11, 12) |= EncodeColor(3)
	*b.fieldAt(12, 12) |= EncodeColor(1)
	*b.fieldAt(13, 12) |= EncodeColor(2)
	return b
}
func BenchmarkSolve(bench *testing.B) {
	setupExample()
	p := NewPosition(setupExample(), 22)
	p.Solve(10)
	fmt.Println(p.move[1:])
}
